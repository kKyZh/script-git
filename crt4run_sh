#!/bin/sh
echo
echo 'Script for creating run.sh (Version-1.6//Apr/14/2019)'
echo '(1.Include crt4run_shf90 program; 2.Include xyz2fdff90 for TranSIESTA)'
    echo
    echo 'Please choose the type of aprun for run.sh'
    echo '(1) SIESTA and TranSIESTA;'
    echo '(2) TBTrans (Individually);'
    echo '(3) LAMMPS;'
    echo '(4) SIESTA (Individually);'
    echo '(5) TranSIESTA (Individually);'
    echo '(Q) "Quit";'
    while true; do
      read -p '==> ' chs_type
      case $chs_type in
        1)
          echo
          echo 'You choose (1) SIESTA and TranSIESTA;'
          break 1
          ;;
        2)
          echo
          echo 'You choose (2) TBTrans (Individually);'
          break 1
          ;;
        3)
          echo
          echo 'You choose (3) LAMMPS;'
          break 1
          ;;
        4)
          echo
          echo 'You choose (4) SIESTA (Individually);'
          break 1
          ;;
        5)
          echo
          echo 'You choose(5) TranSIESTA (Individually);'
          break 1
          ;;
        [Qq]*)
          echo
          echo 'You chosse "Quit", bye!'
          echo
          exit
          ;;
        *)
          echo
          echo 'Please choose the type of aprun for run.sh'
          echo '(1) SIESTA and TranSIESTA;'
          echo '(2) TBTrans (Individually);'
          echo '(3) LAMMPS;'
          echo '(4) SIESTA (Individually);'
          echo '(5) TranSIESTA (Individually);'
          echo '(Q) "Quit";'
      esac
    done

######################################## (1) SIESTA and TranSIESTA ################################
# filename is without extension only have the name
	# no more use # filename_1="${filename1//.fdf}" # delet .fdf
if [[ $chs_type -eq 1 ]]; then
#-------------------------------------------------------------------
echo
echo 'Checking .fdf file...'
nu_fil2=`ls -f *.fdf 2>/dev/null | wc -l` #hide the error of no .car file

	if [[ $nu_fil2 -eq 0 ]]; then
	echo
	echo "There is no .fdf file, please check again and go to create one, bye..."
	echo
	exit

	elif [[ $nu_fil2 -eq 1 ]]; then
	echo
	echo "You have only one .fdf file"
	echo 
	ls *.fdf
	echo
	echo "Do you want to use it for creating run.sh? (Y for Yes, N for No)"
	while true; do
	read choose3
	case $choose3 in
	[Nn]*)
	echo
	echo "See you then, bye..."
	echo
	exit
	;;
	[Yy]*)
	filename1=*.fdf
	crt4run_shf90 $filename1
	echo
	echo "Run crt4run_shf90 for creating run.sh by "$filename1
	echo
	break 1
	;;
	*)
	echo
	echo "Please choose Y for Yes, N for No"
	esac
	done

	elif [[ $nu_fil2 -gt 1 ]]; then
#-------------------------------------------------------------------

        # ----------------- first .fdf file
	echo
  echo '################ WARNING ################'
  echo 'x axis should be all the same coordinates this time.'
  echo 'Check again before running!'
	echo
  echo '---------------- Information --------------------'
	echo 'Please choose first .fdf file for creating run.sh'
  echo '(Run SIESTA)'
	echo
	ls -f *.fdf
	echo
	echo "Please input one of above files:"	

	while true; do
	read -e filename1
  if [ -z "$filename1" ]
    # -z can check variable is empty or not, -e can read the same type from command line
  then
	echo
	ls *.fdf
	echo
    echo "Please input the correct existed file"
  else

	if [ ! -f $filename1 ]; then
	echo
	ls *.fdf
	echo
	echo "Please input the correct existed file"
	
	else
	echo
	echo 'You choose the first: '$filename1
	echo
	break 1
	fi
  fi
	done

        # ----------------- second .fdf file
	echo
  echo '---------------- Information --------------------'
	echo 'Please choose second .fdf file for creating run.sh'
  echo '(Run TranSIESTA for electrode)'
	echo
	ls -f *.fdf
	echo
	echo "Please input one of above files:"	

	while true; do
	read -e filename2
  if [ -z "$filename2" ]
    # -z can check variable is empty or not, -e can read the same type from command line
  then
	echo
	ls *.fdf
	echo
    echo "Please input the correct existed file"
  else

	if [ ! -f $filename2 ]; then
	echo
	ls *.fdf
	echo
	echo "Please input the correct existed file"

  elif [ $filename2 = $filename1 ]; then
    echo
    echo '-------------- Warning ----------------'
    echo 'Please do not enter the same input file'
	  echo
	  ls -f *.fdf
	  echo
    echo 'Try again for the second .fdf file'
	
	else
	echo
	echo 'You choose the second: '$filename2
	echo
	break 1
	fi
  fi
	done

        # ----------------- third .fdf file
	echo
  echo '---------------- Information --------------------'
	echo 'Please choose third .fdf file for creating run.sh'
  echo '(Run TranSIESTA for scattering)'
	echo
	ls -f *.fdf
	echo
	echo "Please input one of above files:"	

	while true; do
	read -e filename3
  if [ -z "$filename3" ]
    # -z can check variable is empty or not, -e can read the same type from command line
  then
	echo
	ls *.fdf
	echo
    echo "Please input the correct existed file"
  else

	if [ ! -f $filename3 ]; then
	echo
	ls *.fdf
	echo
	echo "Please input the correct existed file"

  elif [ $filename3 = $filename1 ] || [ $filename3 = $filename2 ]; then
    echo
    echo '-------------- Warning ----------------'
    echo 'Please do not enter the same input file with the first two files'
    echo '('$filename1', '$filename2' already included)'
	  echo
	  ls -f *.fdf
	  echo
    echo 'Try again for the third .fdf file'
	
	else
	echo
	echo 'You choose the third: '$filename3
	echo
	crt4run_shf90 $filename1 $filename2 $filename3
	break 1
	fi
  fi
	done
  fi

############################## (2) TBTrans #################################
  elif [[ $chs_type -eq 2 ]]; then
#-------------------------------------------------------------------

while true; do
  echo
  ls *.fdf
echo
read -p "how many files: " nu_fil
if [[ $nu_fil -le 0 ]]; then
  echo
  echo error : at least 1 file needs to be run
  echo enter again
else
  i=1
  break 1
fi
done

while true; do
  echo
  ls *.fdf
echo
read -p "filename: " -e filna
if [[ ! -f $filna ]]; then
  echo
  echo error: no exist file, enter again
else
  if [[ ! $filna == *.fdf ]]; then
    echo
    echo error: no "*.fdf" file selected, enter again
  else
  fil_array=("${fil_array[@]}" $filna)
  if [[ $i -eq $nu_fil ]]; then
    break 1
  else
  i=$(($i+1))
  fi
  fi
fi
done
crt4run_shf90 $chs_type ${fil_array[@]}

############################## (3) LAMMPS #################################
  elif [[ $chs_type -eq 3 ]]; then
#-------------------------------------------------------------------
echo
echo 'Checking in.* file...'
nu_fil2=`ls -f in.* 2>/dev/null | wc -l` #hide the error of no .car file

	if [[ $nu_fil2 -eq 0 ]]; then
	echo
	echo "There is no in.* file, please check again and go to create one, bye..."
	echo
	exit

	elif [[ $nu_fil2 -eq 1 ]]; then
	echo
	echo "You have only one in.* file"
	echo 
	ls in.*
	echo
	echo "Do you want to use it for creating run.sh? (Y for Yes, N for No)"
	while true; do
    choose3=y
	###### read choose3
	case $choose3 in
	[Nn]*)
	echo
	echo "See you then, bye..."
	echo
	exit
	;;
	[Yy]*)
	filename1=in.*
	echo
	echo "Run crt4run_shf90 for creating run.sh by "$filename1
	echo
	crt4run_shf90 $filename1 && qsub run.sh && qstat -u boom9000
	echo
	break 1
	;;
	*)
	echo
	echo "Please choose Y for Yes, N for No"
	esac
	done

	elif [[ $nu_fil2 -gt 1 ]]; then
#-------------------------------------------------------------------
	echo
	echo 'Please choose one in.* file for creating run.sh'
	echo
	ls -f in.*
	echo
	echo "Please input one of above files:"	
  ###### ------ quick CH lammps run only in.min file is used

	while true; do
    filename1=in.min
	###### read -e filename1
  if [ -z "$filename1" ]
    # -z can check variable is empty or not, -e can read the same type from command line
  then
	echo
	ls in.*
	echo
  echo "Please input the correct existed file"
  else

	if [ ! -f $filename1 ]; then
	echo
	ls in.*
	echo
	echo "Please input the correct existed file"
	
	else
	echo
	echo 'You choose: '$filename1
	echo
	crt4run_shf90 $filename1 && qsub run.sh && qstat -u boom9000
  echo
	break 1
	fi
  fi
	done
  fi

######################################## (4) SIESTA ################################
# filename is without extension only have the name
	# no more use # filename_1="${filename1//.fdf}" # delet .fdf
  elif [[ $chs_type -eq 4 ]]; then
#-------------------------------------------------------------------
echo
echo 'Checking .fdf file...'
nu_fil2=`ls -f *.fdf 2>/dev/null | wc -l` #hide the error of no .car file

	if [[ $nu_fil2 -eq 0 ]]; then
	echo
	echo "There is no .fdf file, please check again and go to create one, bye..."
	echo
	exit

	elif [[ $nu_fil2 -eq 1 ]]; then
	echo
	echo "You have only one .fdf file"
	echo 
	ls *.fdf
	echo
	echo "Do you want to use it for creating run.sh? (Y for Yes, N for No)"
	while true; do
	read choose3
	case $choose3 in
	[Nn]*)
	echo
	echo "See you then, bye..."
	echo
	exit
	;;
	[Yy]*)
	filename1=*.fdf
	crt4run_shf90 $filename1
	echo
	echo "Run crt4run_shf90 for creating run.sh by "$filename1
	echo
	break 1
	;;
	*)
	echo
	echo "Please choose Y for Yes, N for No"
	esac
	done

	elif [[ $nu_fil2 -gt 1 ]]; then
#-------------------------------------------------------------------

	echo
	echo 'Please choose one .fdf file for creating run.sh'
	echo
	ls -f *.fdf
	echo
	echo "Please input one of above files:"	

	while true; do
	read -e filename1
  if [ -z "$filename1" ]
    # -z can check variable is empty or not, -e can read the same type from command line
  then
	echo
	ls *.fdf
	echo
    echo "Please input the correct existed file"
  else

	if [ ! -f $filename1 ]; then
	echo
	ls *.fdf
	echo
	echo "Please input the correct existed file"
	
	else
	echo
	echo 'You choose: '$filename1
	echo
	crt4run_shf90 $filename1
	break 1
	fi
  fi
	done
  fi
  
############################## (5) tranSIESTA #################################
  elif [[ $chs_type -eq 5 ]]; then
#-------------------------------------------------------------------
echo
echo 'Checking .fdf file...'
nu_fil2=`ls -f *.fdf 2>/dev/null | wc -l` #hide the error of no .car file

	if [[ $nu_fil2 -eq 0 ]]; then
	echo
	echo "There is no .fdf file, please check again and go to create one, bye..."
	echo
	exit

	elif [[ $nu_fil2 -eq 1 ]]; then
	echo
	echo "You have only one .fdf file"
	echo 
	ls *.fdf
	echo
	echo "Do you want to use it for creating run.sh? (Y for Yes, N for No)"
	while true; do
	read choose3
	case $choose3 in
	[Nn]*)
	echo
	echo "See you then, bye..."
	echo
	exit
	;;
	[Yy]*)
	filename1=*.fdf
	crt4run_shf90 $filename1
	echo
	echo "Run crt4run_shf90 for creating run.sh by "$filename1
	echo
	break 1
	;;
	*)
	echo
	echo "Please choose Y for Yes, N for No"
	esac
	done

	elif [[ $nu_fil2 -gt 1 ]]; then
#-------------------------------------------------------------------

	echo
  echo '################ WARNING ################'
  echo This is only for TranSIESTA run.
  echo Only scatting file will be calculated.

        # ------ 1st and 2nd file are the same scattering file 
        # ------ for recognize siesta or transiesta
	echo
  echo '---------------- Information --------------------'
	echo 'Please choose "tss***.fdf" input file for creating run.sh'
  echo '(Run TranSIESTA for scattering)'
	echo
	ls -f *.fdf
	echo
	echo "Please input one of above files:"	

	while true; do
	read -e filename1
  if [ -z "$filename1" ]
    # -z can check variable is empty or not, -e can read the same type from command line
  then
	echo
	ls *.fdf
	echo
    echo "Please input the correct existed file"
  else

	if [ ! -f $filename1 ]; then
	echo
	ls *.fdf
	echo
	echo "Please input the correct existed file"

	else
	echo
	echo 'You choose the input file: '$filename1
	echo
  filename2=$filename1
	crt4run_shf90 $filename1 $filename2
	break 1
	fi
  fi
	done
  fi

fi
