      program plane
      
      integer*4 i, j, k ,l, style, num, types, no, num_patom, catom
      integer*4, allocatable, dimension(:)::id, id_patom, patom
      real*8    vx, vy, vz, cx, cy, cz, cutoff
      real*8    cell(3), xlo, xhi, ylo, yhi, zlo, zhi
      real*8    center(3), mass(10), dx, dy, dz, dist, cdist, dotp
      real*8, allocatable, dimension(:,:)::pos

      character*64 filename, dummy

      call getarg(1,filename)
      open(20,FILE=filename, form='formatted', status='old',
     $     err=99,access='sequential')
      open(30,FILE='changedata.plane', form='formatted', 
     $     status='unknown',access='sequential')

      write(*,*)'Position data in the input file.'
      write(*,*)'(1) absolute (2) partial'
      read(5,*) style

      write(*,*)'Please enter the normal vecter of plane.'
      write(*,*)'e.g. (111) -> 1 1 1'
      read(*,*)vx, vy, vz

      write(*,*)'Please enter the center position of plane.'
      write(*,*)'Use the partial position.'
      read(*,*)cx, cy, cz

      write(*,*)'Please enter the cutoff'
      read(*,*)cutoff

      read(20,'(A64)')dummy
      read(20,'(A64)')dummy
      read(20,'(I8)')num

      allocate(id(num))
      allocate(id_patom(num))
      allocate(patom(num))
      allocate(pos(num,3))

      read(20,'(A64)')dummy
      read(20,'(I3)')types
      read(20,'(A64)')dummy
      read(20,*)xlo,xhi
      read(20,*)ylo,yhi
      read(20,*)zlo,zhi
      cell(1) = xhi-xlo
      cell(2) = yhi-ylo
      cell(3) = zhi-zlo
      center(1) = xlo+cell(1)*cx
      center(2) = ylo+cell(2)*cy
      center(3) = zlo+cell(3)*cz

      read(20,'(A64)')dummy
      read(20,'(A64)')dummy
      read(20,'(A64)')dummy
      do i=1, types
         read(20,'(3X,F11.7)')mass(i)
      end do
      read(20,'(A64)')dummy
      read(20,'(A64)')dummy
      read(20,'(A64)')dummy
      do i=1, num
         read(20,*)no,id(i),(pos(i,j),j=1,3)
         if(style == 2) then
            pos(i,1) = pos(i,1)*cell(1)
            pos(i,2) = pos(i,2)*cell(2)
            pos(i,3) = pos(i,3)*cell(3)
         endif
         dx = pos(i,1) - center(1)
         dy = pos(i,2) - center(2)
         dz = pos(i,3) - center(3)
         dist = dsqrt(dx*dx+dy*dy+dz*dz)
         
         if(i==1) then
            cdist = dist
            catom = 1
         else if(dist < cdist) then
            cdist = dist
            catom = i
         end if
         
      end do

      write(*,'(A13,1X,I7,1X,3(F12.7))')
     $     'center atom =',catom, (pos(catom,j),j=1,3)

      num_patom  = 0
      id_patom = 0
      do i=1, num
         dx = pos(i,1) - pos(catom,1)
         dy = pos(i,2) - pos(catom,2)
         dz = pos(i,3) - pos(catom,3)
         dotp = dx*vx+dy*vy+dz*vz
         if(dotp < cutoff) then
            num_patom = num_patom + 1
            patom(num_patom) = i
            id_patom(i) = 1
            write(*,'(A12,1X,I7,1X,3(F12.7))')
     $           'on the plane',i,pos(i,1),pos(i,2),pos(i,3)
         endif
      end do

      i = 1
      write(30,*)' Position data'
      write(30,*)' '
      write(30,'(I8,1X,A5)')num_patom, 'atoms'
      write(30,*)' '
      write(30,'(I3, 1X, A10)')i,'atom types'
      write(30,*)' '
      write(30,'(1X,F10.6,1X,F10.6,1X,A7)')xlo,xhi,'xlo xhi'
      write(30,'(1X,F10.6,1X,F10.6,1X,A7)')ylo,yhi,'ylo yhi'
      write(30,'(1X,F10.6,1X,F10.6,1X,A7)')zlo,zhi,'zlo zhi'
      write(30,*)' '
      write(30,*)' Masses'
      write(30,*)' '
      write(30,'(I3,1X,F11.7)')i,mass(i)
      write(30,*)' '
      write(30,*)' Atoms'
      write(30,*)' '
      do i=1, num_patom
         write(30,'(1X,I9,1X,I2,3(F12.7))')
     $        i,id_patom(patom(i)),(pos(patom(i),j),j=1,3)
         write(*,'(1X,I9,1X,I2,3(F12.7))')
     $        i,id_patom(patom(i)),(pos(patom(i),j),j=1,3)
      end do
      
 99   stop
      end
