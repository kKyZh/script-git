        program getdump2fdf
        
        implicit none
        
        integer :: num, num_data
        integer :: i, j, step, at, get_num, nx, ny, nz, format_co
        integer :: numv, maxid, getdata_num,order
        integer :: tempid 
        integer :: check
        integer :: num_ele_low,num_ele_hi
        integer, allocatable :: id(:),sortid(:)
        integer, pointer :: num_ele(:)
        real :: cell_lo_re, cell_hi_re
        real,allocatable :: cellx(:), celly(:), cellz(:)
        real,allocatable :: posx2(:,:), posy2(:,:), posz2(:,:)
        real,allocatable :: posx1(:), posy1(:), posz1(:)
        real, allocatable :: cell_lo(:,:), cell_hi(:,:)
        real, allocatable :: val(:,:,:)
        character(128) :: filename, dummy
        character(36), allocatable :: sortchar(:)
        character(64) :: tempchar
        character(len=:), allocatable :: name_ele(:)

        call getarg(1,filename)
        open(10,file=filename, status='old',&
                err=99, form='formatted', access='sequential')
        open(20,file='tempdata.dat', status='unknown', &
                form='formatted', access='sequential') 
        open(30,file='tempdata2.dat', status='unknown', &
                form='formatted', access='sequential') 
        open(40,file='getdata.lammps', status='unknown', &
                form='formatted', access='sequential') 
        open(50,file='position.fdf', status='unknown', &
                form='formatted', access='sequential') 
               
        maxid = 1
        num_data = 0
        step = 1
        num = 1 
        i=1
        j=1
        
        read(10,'(A128)')dummy
        read(10,'(i6)')step
        read(10,'(A128)')dummy
        read(10,'(i6)')num
        read(10,'(A128)')dummy

                allocate(id(num))
                allocate(num_ele(num))

        write(*,*)' '
        write(*,*)'Running getdump file from dump.GNR... &
                        (Version-1.1-beta)'
        write(*,*)' '
        write(*,*)' '
        write (*,*)'Please input how many variables (integer)&
                         in one row?'
        write(*,*)' '
        write (*,'(1x,2a)')'(8 variables in one row at dump.GNR file,',&
        ' or "0" to run Lammps2fdf directly, "-1" to quit the job)'

49      continue

        read (5,*,iostat=check)order

        if(check>0)then
        write(*,*)' '
        write(*,'(1x,2a)')&
        'Please input "3" to "8" to choose variables ',&
        '(or "0" to run Lammps2fdf, "-1" to quit the job)' 
        goto 49
        else
                if(order.eq.0)then
        write(*,*)' '
        write(*,*)'Please be sure you already run this program before'
        goto 300
                
                elseif(order.eq.-1)then
        write(*,*)' '
                write(*,*) 'You quit the job'
        write(*,*)' '
        goto 500
                
                elseif(order.lt.-1)then
        write(*,*)' '
                write(*,*) 'no data selected, try again'
        goto 49
        
                elseif (order.lt.3.and.order.gt.0) then
        write(*,*)' '
                write(*,*) 'no data selected, try again'
        goto 49
                elseif (order.gt.8)then
        write(*,*)' '
                write(*,*) 'over the data selected range, try again'
        goto 49
                else
        numv = order-2
                endif
        
        endif

        close(10)
        open(10,file=filename, status='old',&
                err=99, form='formatted', access='sequential')
61      continue
        read(10,'(A128)',end=100)dummy
        read(10,'(i6)')step
        read(10,'(A128)')dummy
        read(10,'(i6)')num
        read(10,'(A128)')dummy


        num_data = num_data+1
        write(20,'(A70,i2)')'Tempdata for getdump to obtain &
                        getdata.lammps. Data of number ',num_data
        
        do i=1,maxid
                num_ele(i)=0
        end do

        do i=1, 3
                allocate(cell_lo(i,num_data),cell_hi(i,num_data))
                read(10,*)cell_lo(i,num_data),cell_hi(i,num_data)
         !       write(*,*)sizeof(cell_lo),sizeof(cell_hi)
                write(20,*)cell_lo(i,num_data), cell_hi(i,num_data)
                deallocate(cell_lo,cell_hi) 
        end do
        
        read(10,'(A128)')dummy

                do i=1, num
                allocate(val(j,i,num_data))
                read(10,*)at,id(i),(val(j,i,num_data),j=1,numv)
         !       write(*,*)"sizeof(at), sizeof(id), sizeof(val)", &
         !             sizeof(at), sizeof(id), sizeof(val)
                write(20,'(1x,i7,1x,i2,3(f12.7))')&
                        at,id(i),(val(j,i,num_data),j=1,numv)
                        if (i==1) then 
                                maxid=id(i)
                        else if (id(i) >= maxid) then
                                        maxid=id(i)
                        else
                        end if

                num_ele(id(i))=num_ele(id(i))+1
         !       write(*,*) "sizeof num_ele(int(id(i)))", &
         !             sizeof(num_ele(id(i)))
         !       write(*,*) "sizeof num_ele", &
         !             sizeof(num_ele)
                deallocate(val) 
        end do
                
        go to 61
        
100     continue
       
        close(20)
        open(20,file='tempdata.dat', status='old', &
                form='formatted', access='sequential') 
        i=1
        j=1

        write(*,*)' '
        write(*,*)' '
        write(*,*)'Which number of data do you want to get'
        write(*,*)' '
        write(*,'(1x,a16,1x,i2)')'Number of data =',num_data
        write(*,'(a2,1x,i2,1x,a18)')' (',num_data,'is the final data)'
81      continue
        read(5,*,iostat=check) getdata_num
        if(check>0)then
        write(*,*)'Please input the correct number'
                goto 81
        else
                if (num_data<getdata_num) then
        write(*,*)' '
        write(*,*)'too large value of function number, &
                        please input again'
                goto 81
                elseif (getdata_num<1)then
        write(*,*)' '
        write(*,*)'too small value of function number, &
                        please input again'
                goto 81
                else
                endif
        endif
        write(*,*)' '
        write(*,*)' '
        write(*,*)'Format of coordination of atom position'
        write(*,*)' '
        write(*,*)'(1) relative coordinates (.car type) &
                        (2) absolute coordinates (.xyz type)'
70      continue

        read(5,*,iostat=check) format_co
        if(check>0)then
                write(*,*)'Please input the correct number'
        goto 70
        else
        do while (format_co/=1.and.format_co/=2)
        write(*,*)' '
        write(*,*)'wrong format number, please input 1 or 2'
        goto 70
        end do
        endif
        write(*,*)' '
        write(*,*)'Where is the position of column x in the output data'

71      continue
        
        read(5,*,iostat=check) order
        if(check>0)then
                write(*,*)'Please input the correct number'
        goto 71
        else
                if (order.lt.3) then
                write(*,*)' '
                write(*,*) 'too small of x value, try again'
                goto 71
                elseif (order.gt.8)then
                write(*,*)' '
                write(*,*) 'too large of x value, try again'
                goto 71
                else
                endif
        nx = order - 2
        endif

        write(*,*)' '
        write(*,*)'Where is the position of column y in the output data'
72      continue
        read(5,*,iostat=check) order
        if(check>0)then
                write(*,*)'Please input the correct number'
        goto 72
        else
                if (order.lt.3) then
                write(*,*)' '
                write(*,*) 'too small of y value, try again'

                goto 72
                elseif (order.gt.8)then
                write(*,*)' '
                write(*,*) 'too large of y value, try again'

                goto 72
                else
                endif
        ny = order - 2
        endif

        write(*,*)' '
        write(*,*)'Where is the position of column z in the output data'
73      continue
        read(5,*,iostat=check) order
        if(check>0)then
                write(*,*)'Please input the correct number'
        goto 73
        else
                if (order.lt.3) then
                write(*,*)' '
                write(*,*) 'too small of z value, try again'
                goto 73
                elseif (order.gt.8)then
                write(*,*)' '
                write(*,*) 'too large of z value, try again'
                goto 73
                else
                endif
        nz = order - 2
        end if
        
        get_num = 1
        allocate(cellx(get_num),celly(get_num),cellz(get_num))

80      continue
        read(20,*,end=200)dummy
        allocate(cell_lo(i,get_num),cell_hi(i,get_num))
        do i=1,3
                read(20,*)cell_lo(i,get_num),cell_hi(i,get_num)
                if (i==1) then
        cellx(get_num) = abs(cell_hi(1,get_num)-cell_lo(1,get_num))
                else if(i==2) then
        celly(get_num) = abs(cell_hi(2,get_num)-cell_lo(2,get_num))
                else if(i==3) then
        cellz(get_num) = abs(cell_hi(3,get_num)-cell_lo(3,get_num))
                else
                write(*,*)cell_lo(i,get_num),cell_hi(i,get_num)
                end if
        enddo
        
        if (getdata_num==get_num) then
                write(30,*)'# Position data (not sorted)'
                write(30,'(i8,1x,a5)')num,'atoms'
                write(30,'(i3,1x,a10,1x,3(i6))')maxid, 'atom types',&
                (num_ele(j),j=1,maxid)
                write(30,'(f11.7,1x,f11.7,1x,a7)')&
                        cell_lo(1,get_num), cell_hi(1,get_num),'xlo xhi'
                write(30,'(f11.7,1x,f11.7,1x,a7)')&
                        cell_lo(2,get_num), cell_hi(2,get_num),'ylo yhi'
                write(30,'(f11.7,1x,f11.7,1x,a7)')&
                        cell_lo(3,get_num), cell_hi(3,get_num),'zlo zhi'
                write(30,*)' '
                write(30,*)'Atoms'
                write(30,*)' '
        else 
        endif

        do i=1,num
                allocate(val(j,i,get_num))
                allocate(posx2(i,get_num),posy2(i,get_num),&
                                posz2(i,get_num))
                read(20,'(1x,i7,1x,i2,3(f12.7))')&
                        at,id(i),(val(j,i,get_num),j=1,numv)
                posx2(i,get_num) = val(nx,i,get_num)
                posy2(i,get_num) = val(ny,i,get_num)
                posz2(i,get_num) = val(nz,i,get_num)
                
                if (format_co==2.and.getdata_num==get_num) then
                posx2(i,get_num)=val(nx,i,get_num)*cellx(get_num)+&
                        cell_lo(1,get_num)
                posy2(i,get_num)=val(ny,i,get_num)*celly(get_num)+&
                        cell_lo(2,get_num)
                posz2(i,get_num)=val(nz,i,get_num)*cellz(get_num)+&
                        cell_lo(3,get_num)
                        write(30,'(1x,i7,1x,i2,3(f12.7))')&
                        at, id(i), posx2(i,getdata_num),&
                        posy2(i,getdata_num),posz2(i,getdata_num)
                else if (format_co==1.and.getdata_num==get_num) then
                        write(30,'(1x,i7,1x,i2,3(f12.7))')&
                        at, id(i), val(nx,i,getdata_num),&
                        val(ny,i,getdata_num),val(nz,i,getdata_num)
                else
                endif

                deallocate(posx2,posy2,posz2)
                deallocate(val) 
        enddo
                
        deallocate(cell_lo,cell_hi) 
        get_num=get_num+1  
        go to 80

200     continue

        write(*,*)' '
        write(*,*)' '
        write(*,*)'size of supercell'
        write(*,*)'x =',cellx(getdata_num)
        write(*,*)'y =',celly(getdata_num)
        write(*,*)'z =',cellz(getdata_num)
        write(*,*)' '
        write(*,'(1x,a16,1x,i2)')'Number of data =',num_data
        write(*,*) 'number of obtained data =',getdata_num
        write(*,*)' '
        write(*,*) "total number of atoms =", num
        write(*,*)'total types of atoms =',maxid
        do i=1,maxid
                write(*,'(1x,a8,1x,i2,1x,a1,1x,i6)')'type (',i,')&
                        element', num_ele(i) 
                !write(*,*) "sizeof num_ele", &
                !      sizeof(num_ele)
        enddo        
        
        close(20)
        close(30)
        open(30,file='tempdata2.dat', status='old', &
                form='formatted', access='sequential') 

        read(30,'(a16)')dummy
        write(40,'(a16)')dummy
        read(30,'(i8,1x,a5)')num, dummy
        write(40,'(i8,1x,a5)')num, dummy
        read(30,'(i3,1x,a29)')maxid, dummy
        write(40,'(i3,1x,a29)')maxid, dummy
        read(30,'(f11.7,1x,f11.7,1x,a7)')&
                cell_lo_re, cell_hi_re, dummy
        write(40,'(f11.7,1x,f11.7,1x,a7)')&
                cell_lo_re, cell_hi_re, dummy
        read(30,'(f11.7,1x,f11.7,1x,a7)')&
                cell_lo_re, cell_hi_re, dummy
        write(40,'(f11.7,1x,f11.7,1x,a7)')&
                cell_lo_re, cell_hi_re, dummy
        read(30,'(f11.7,1x,f11.7,1x,a7)')&
                cell_lo_re, cell_hi_re, dummy
        write(40,'(f11.7,1x,f11.7,1x,a7)')&
                cell_lo_re, cell_hi_re, dummy
        read(30,'(a16)')dummy
        write(40,'(a16)')dummy
        read(30,'(a16)')dummy
        write(40,'(a16)')dummy
        read(30,'(a16)')dummy
        write(40,'(a16)')dummy
        
        allocate(sortid(num),sortchar(num))
        do i=1,num
        read(30,'(9x,i2,a36)')sortid(i),sortchar(i)
        enddo
         

        do i=1,num
        do j=1,num
                if(j>=2.and.j<=num&
                .and.sortid(j-1)>sortid(j))then
                tempid=sortid(j)
                sortid(j)=sortid(j-1)
                sortid(j-1)=tempid
                tempchar=sortchar(j)
                sortchar(j)=sortchar(j-1)
                sortchar(j-1)=tempchar
        else
        endif
        enddo
        enddo

        do i=1,num
        write(40,'(1x,i7,1x,i2,a36)')i,sortid(i),sortchar(i)
        enddo
        !write(*,*)sizeof(sortid),sizeof(sortchar)
        deallocate(sortid,sortchar)
        deallocate(cellx,celly,cellz)
              
        write(*,*)' '
        write(*,*)' '
        write(*,*)'file completed...'
        write(*,*)'getdata.lammps created...'
        write(*,*)' '
        write(*,*)'Running...   Outputing the data to position.fdf'
        write(*,*)' '

        goto 400

300     continue

        close(40)
        open(40,file='getdata.lammps', status='old', &
                form='formatted', access='sequential') 
        
        write(*,*)' '
        write(*,*)'Running...   Outputing the data to position.fdf'
        write(*,*)' '

                read(40,'(a)')dummy
                read(40,'(i8,1x,a5)')num, dummy
                read(40,'(i3,1x,a10,1x,3(i6))')maxid, dummy,&
                (num_ele(j),j=1,maxid)


400     continue
        close(40)
        open(40,file='getdata.lammps', status='old', &
                form='formatted', access='sequential') 

        allocate(character(5)::name_ele(maxid)) 
        do i=1,maxid
        write(*,*)'Please input the label of element '&
                ,i,'Amount =',num_ele(i)
        read(5,*)name_ele(i)
        enddo

        do i=1,9
        read(40,'(a)')dummy
        enddo
        num_ele_low=1
        num_ele_hi=0
        write(50,*)'%block AtomicCoordinatesAndAtomicSpecies' 
        do i=1,maxid
                num_ele_hi=num_ele_hi+num_ele(i)
                do j=num_ele_low,num_ele_hi

        read(40,'(9x,i2,a36)')id(j),dummy
        write(50,'(a36,1x,i2,1x,a5)')dummy,id(j),name_ele(i)
                enddo 
        num_ele_low=num_ele_low+num_ele(i)
        enddo
        write(50,*)'%block AtomicCoordinatesAndAtomicSpecies' 

                !write(*,*) "sizeof num_ele", &
                !      sizeof(num_ele)

        write(*,*)' '
        write(*,*)'Outputing completed'
        write(*,*)'position.fdf created...'
        write(*,*)' '
        deallocate(name_ele)       

500     continue
        
        deallocate(id)
        deallocate(num_ele)

        close(10)
        close(30)
        close(40)
        close(50)
99   stop

        end program getdump2fdf
